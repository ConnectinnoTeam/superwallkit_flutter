name: Release

on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    permissions:
      id-token: write # Required for authentication using OIDC
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - name: Install dependencies
        run: flutter pub get
      - name: Publish
        run: flutter pub publish --force
  tag:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Tag
        run: |
          sudo git config --global user.name 'Jake'
          sudo git config --global user.email 'jakemor@users.noreply.github.com'
          sudo git pull
          echo "\n\n\n- - - - - VERSION - - - - -\n\n\n"
          VERSION=$(grep '^version:' pubspec.yaml | awk '{ print $2 }')
          echo $VERSION
          echo "\n\n\n- - - - - END VERSION - - - - -\n\n\n"
          sudo git tag -a "$VERSION" -m "tags with latest version"
          sudo git push --tags || true
          sudo git checkout -b "release/$VERSION"
          sudo git push -u origin "release/$VERSION"

  slack:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Parse version
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{ print $2 }')
          echo "VERSION=$VERSION"
          echo "::set-output name=prop::$VERSION"
      - name: Determine prerelease status
        id: prerelease
        run: |
          VERSION=${{ steps.version.outputs.prop }}
          if [[ "$VERSION" == *"-alpha"* || "$VERSION" == *"-beta"* || "$VERSION" == *"-rc"* ]]; then
            echo "::set-output name=status::true"
          else
            echo "::set-output name=status::false"
          fi
      - name: Send Slack message
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Please create a new Flutter release! https://github.com/superwall/Superwall-Flutter/releases/new?tag=${{ steps.version.outputs.prop }}&prerelease=${{ steps.prerelease.outputs.status }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
